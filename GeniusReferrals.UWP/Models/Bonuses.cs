/*
 * GeniusReferrals.UWP
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/18/2017
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using GeniusReferrals.UWP;
using GeniusReferrals.UWP.Utilities;

namespace GeniusReferrals.UWP.Models
{
    public class Bonuses : INotifyPropertyChanged 
    {
        // These fields hold the values for the public properties.
        private string advocateToken;
        private string reference;
        private double? paymentAmount;

        /// <summary>
        /// The referral's token. Usually the one that completed the purchase, or trigger an event.
        /// </summary>
        [JsonProperty("advocate_token")]
        public string AdvocateToken 
        { 
            get 
            {
                return this.advocateToken; 
            } 
            set 
            {
                this.advocateToken = value;
                onPropertyChanged("AdvocateToken");
            }
        }

        /// <summary>
        /// The reference number for this request. Usually the order_id, payment_id, or timestamp.
        /// </summary>
        [JsonProperty("reference")]
        public string Reference 
        { 
            get 
            {
                return this.reference; 
            } 
            set 
            {
                this.reference = value;
                onPropertyChanged("Reference");
            }
        }

        /// <summary>
        /// The payment amount the referrals has made. Required for a percentage based campaign.
        /// </summary>
        [JsonProperty("payment_amount")]
        public double? PaymentAmount 
        { 
            get 
            {
                return this.paymentAmount; 
            } 
            set 
            {
                this.paymentAmount = value;
                onPropertyChanged("PaymentAmount");
            }
        }

        /// <summary>
        /// Property changed event for observer pattern
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raises event when a property is changed
        /// </summary>
        /// <param name="propertyName">Name of the changed property</param>
        protected void onPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
} 